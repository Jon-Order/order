name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Verify secrets
        run: |
          if [ -n "$GLIDE_API_TOKEN" ] && [ -n "$GLIDE_APP_ID" ] && [ -n "$GLIDE_ORDER_LINES_TABLE_NAME" ]; then
            echo "✅ All required secrets are available"
          else
            echo "❌ Some secrets are missing"
            exit 1
          fi
        env:
          GLIDE_API_TOKEN: ${{ secrets.GLIDE_API_TOKEN }}
          GLIDE_APP_ID: ${{ secrets.GLIDE_APP_ID }}
          GLIDE_ORDER_LINES_TABLE_NAME: ${{ secrets.GLIDE_ORDER_LINES_TABLE_NAME }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run database migrations
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -f migrations/002-sqlite-to-postgres.sql
        
      - name: Check for syntax errors
        run: |
          for file in $(find . -name "*.js" ! -path "./node_modules/*"); do
            node --check "$file" || exit 1
          done
          
      - name: Run tests
        run: |
          node test-config.js
          node test-analytics.js
          node test-webhook.js
          node test-adapter-debug.js
          node test-analytics-path.js
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          GLIDE_API_TOKEN: ${{ secrets.GLIDE_API_TOKEN }}
          GLIDE_APP_ID: ${{ secrets.GLIDE_APP_ID }}
          GLIDE_ORDER_LINES_TABLE_NAME: ${{ secrets.GLIDE_ORDER_LINES_TABLE_NAME }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify deploy hook
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK" ]; then
            echo "✅ Deploy hook is available"
          else
            echo "❌ Deploy hook is missing"
            exit 1
          fi
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
          
      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }} 